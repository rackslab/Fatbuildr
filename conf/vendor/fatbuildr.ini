# This is the vendor configuration file of Fatbuildr. Do not modify! To change
# Fatbuildr configuration parameters, please override these parameters in
# /etc/fatbuildr/fatbuildr.ini

[dirs]
instances = /etc/fatbuildr/instances.d
queue = /var/lib/fatbuildr/queue
archives = /var/lib/fatbuildr/archives
registry = /var/lib/fatbuildr/registry
cache = /var/cache/fatbuildr
tmp = /var/tmp

[daemon]
debug = no
# When disabled, fatbuildr external libs logs are filtered out. This can be
# enabled to debug or understand behavior of external libs. Enabling fulldebug
# implies debug enabled.
fulldebug = no

[web]
debug = no
# Bind address of the web application. By default, it only listens for incoming
# connections from localhost.
host = localhost
vendor_templates = /usr/lib/fatbuildr/web/templates
templates = /etc/fatbuildr/web/templates
static = /usr/lib/fatbuildr/web/static

[images]
storage = /var/lib/fatbuildr/images
defs = /usr/lib/fatbuildr/images
# List of artefacts formats enabled on this Fatbuildr installation.
formats = rpm,deb,osi
create_cmd = /usr/libexec/fatbuildr/u-mkosi --default {{ definition }} --output {{ path }} --cache {{ dirpath }}/.cache-{{ format }} --skeleton {{ skeleton }} --environment FATBUILDR_USER={{ user }}

[registry]
conf = /usr/lib/fatbuildr/registry

[containers]
# The images built with mkosi have a symlink
# /etc/resolv.conf â†’ /run/systemd/resolve/* as they expect systemd-resolved to
# run inside the containers (ie. systemd-nspawn -B).
init_opts = --resolv-conf=replace-stub
# Disable registration to systemd-machined as recommended in systemd-nspawn(1)
# for containers not running service manager. Also keep fatbuildrd unit scope
# so processes in containers get the resources allocated to fatbuildrd service.
opts = --quiet --register=no --keep-unit

[keyring]
storage = /var/lib/fatbuildr/keyring
type = rsa
size = 4096
expires = no

#
# Formats specifics parameters
#
[format:deb]
env_path = /var/cache/pbuilder/{{ name }}
init_cmd = cowbuilder --create --distribution {{ environment }} --architecture {{ architecture }} --basepath {{ path }}
img_update_cmds = apt-get update && apt-get --yes upgrade
env_update_cmds = cowbuilder --update --basepath {{ path }}

[format:rpm]
env_path = /var/lib/mock/{{ name }}-bootstrap
init_cmd = mock --init --root={{ name }} --config-opts="chroot_additional_packages=perl"
img_update_cmds = dnf upgrade
env_update_cmds = mock --update --root={{ name }}

[format:osi]
img_update_cmds = dnf upgrade
